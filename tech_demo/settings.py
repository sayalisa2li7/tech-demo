"""
Django settings for tech_demo project.

Generated by 'django-admin startproject' using Django 2.2.12.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
from celery.schedules import crontab

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '%kx3e8be)yw(g&g$xlywgn%320w1(8rgnt#(cv53u+es*uw(3j'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'myapp',
    'rest_framework',
    'django_celery_beat',
    'django_extensions',
    'corsheaders',
]

CELERY_BEAT_SCHEDULER = 'django_celery_beat.schedulers:DatabaseScheduler'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'tech_demo.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'tech_demo.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         # 'ENGINE': 'django.db.backends.sqlite3',
#         # 'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'stock_data',
#         'USER': 'sayali97',
#         'PASSWORD': 'Sugandha1274*',
#         'HOST': 'db',
#         'PORT': '3308',
#     }
# }
import os

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': os.getenv('DB_NAME', 'stock_data'),
        'USER': os.getenv('DB_USER', 'sayali97'),
        'PASSWORD': os.getenv('DB_PASSWORD', 'Sugandha1274*'),
        'HOST': os.getenv('DB_HOST', 'db'),
        'PORT': os.getenv('DB_PORT', '3306'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

STATIC_URL = '/static/'

# myproject/settings.py

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'stock_data',
#         'USER': 'sayali97',
#         'PASSWORD': 'Sugandha1274*',
#         'HOST': 'localhost',
#         'PORT': '3306',
#     }
# }

# Celery settings
# backend/stock_market_system/settings.py

# Celery settings
CELERY_BROKER_URL = 'redis://redis:6379/0'
CELERY_RESULT_BACKEND = 'redis://redis:6379/0'
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = 'UTC'

# Celery Beat schedule
CELERY_BEAT_SCHEDULE = {
    # 'generate-reports-daily': {
    #     'task': 'tech_demo.tasks.generate_reports_task',
    #     'schedule': crontab(hour=0, minute=0),  # Every day at midnight
    # },
    'fetch-stock-data': {
        'task': 'myapp.tasks.fetch_stock_data',
        'schedule': crontab(hour=0, minute=0),
    },
    # 'generate-daily-closing-price-report-every-midnight': {
    #     'task': 'myapp.tasks.generate_daily_closing_price_report',
    #     'schedule': crontab(hour=0, minute=0),  # Midnight
    # },
    # 'generate-price-change-percentage-report-every-midnight': {
    #     'task': 'myapp.tasks.generate_price_change_percentage_report',
    #     'schedule': crontab(hour=0, minute=0),  # Midnight
    # },
    # 'generate-top-gainers-losers-report-every-midnight': {
    #     'task': 'myapp.tasks.calculate_top_gainers_losers',
    #     'schedule': crontab(hour=0, minute=0),  # Midnight
    # },
}

# Add this at the bottom of your settings file
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'